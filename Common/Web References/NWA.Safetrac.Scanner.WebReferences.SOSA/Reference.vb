'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.832
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.832.
'
Namespace NWA.Safetrac.Scanner.WebReferences.SOSA
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="LoggerSoapBinding", [Namespace]:="http://webservice.logger.sosa.nwa.com")>  _
    Partial Public Class LoggerService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://aotd2.mn.nwa.com:17061/SOSA-LOGGER-WEBSERVICE/services/Logger"
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://webservice.logger.sosa.nwa.com", ResponseNamespace:="http://webservice.logger.sosa.nwa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertMultipleLogDetails(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal xml As String) As <System.Xml.Serialization.XmlElementAttribute("insertMultipleLogDetailsReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("insertMultipleLogDetails", New Object() {xml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BegininsertMultipleLogDetails(ByVal xml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertMultipleLogDetails", New Object() {xml}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertMultipleLogDetails(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://webservice.logger.sosa.nwa.com", ResponseNamespace:="http://webservice.logger.sosa.nwa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function retrieveApplicationLogs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal [date] As System.Nullable(Of Date)) As <System.Xml.Serialization.XmlElementAttribute("retrieveApplicationLogsReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("retrieveApplicationLogs", New Object() {[date]})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginretrieveApplicationLogs(ByVal [date] As System.Nullable(Of Date), ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("retrieveApplicationLogs", New Object() {[date]}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndretrieveApplicationLogs(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://webservice.logger.sosa.nwa.com", ResponseNamespace:="http://webservice.logger.sosa.nwa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertLogDetails(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal xml As String) As <System.Xml.Serialization.XmlElementAttribute("insertLogDetailsReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("insertLogDetails", New Object() {xml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BegininsertLogDetails(ByVal xml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertLogDetails", New Object() {xml}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertLogDetails(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://webservice.logger.sosa.nwa.com", ResponseNamespace:="http://webservice.logger.sosa.nwa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function viewApplicationLogs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal applCode As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal applModlCode As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal from As System.Nullable(Of Date), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal [to] As System.Nullable(Of Date)) As <System.Xml.Serialization.XmlElementAttribute("viewApplicationLogsReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("viewApplicationLogs", New Object() {applCode, applModlCode, from, [to]})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginviewApplicationLogs(ByVal applCode As String, ByVal applModlCode As String, ByVal from As System.Nullable(Of Date), ByVal [to] As System.Nullable(Of Date), ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("viewApplicationLogs", New Object() {applCode, applModlCode, from, [to]}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndviewApplicationLogs(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://webservice.logger.sosa.nwa.com", ResponseNamespace:="http://webservice.logger.sosa.nwa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function retrieveLogs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal applicationCode As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal startDate As System.Nullable(Of Date), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal startTime As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal endDate As System.Nullable(Of Date), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal endTime As String, ByVal checkStatus As Integer) As <System.Xml.Serialization.XmlElementAttribute("retrieveLogsReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("retrieveLogs", New Object() {applicationCode, startDate, startTime, endDate, endTime, checkStatus})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginretrieveLogs(ByVal applicationCode As String, ByVal startDate As System.Nullable(Of Date), ByVal startTime As String, ByVal endDate As System.Nullable(Of Date), ByVal endTime As String, ByVal checkStatus As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("retrieveLogs", New Object() {applicationCode, startDate, startTime, endDate, endTime, checkStatus}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndretrieveLogs(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://webservice.logger.sosa.nwa.com", ResponseNamespace:="http://webservice.logger.sosa.nwa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function updateApplicationLogDetails(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal [date] As System.Nullable(Of Date)) As <System.Xml.Serialization.XmlElementAttribute("updateApplicationLogDetailsReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("updateApplicationLogDetails", New Object() {[date]})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginupdateApplicationLogDetails(ByVal [date] As System.Nullable(Of Date), ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("updateApplicationLogDetails", New Object() {[date]}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndupdateApplicationLogDetails(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
    End Class
End Namespace
